{"ast":null,"code":"var _jsxFileName = \"/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/Contact.js\";\nimport React, { useState } from 'react';\nexport const Contact = () => {\n  const [message, setMessage] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://localhost:9001/contact', {\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        email,\n        message\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (!res.ok) {\n        console.log('error');\n      } else {\n        return res.json();\n      }\n    }).then(response => {\n      if (response.status === 'success') {\n        alert(\"Tack för ditt meddelande. Jag kommer att svara så snart jag kan!\");\n      } else if (response.status === 'fail') {\n        alert(\"Det gick tyvärr inte att skicka meddelandet.\");\n      }\n    }).then(() => {\n      setName('');\n      setEmail('');\n      setMessage('');\n    }).catch(err => console.log('errors', err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"contact-form\",\n    onSubmit: handleSubmit,\n    method: \"POST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: name,\n    onChange: event => setName(event.target.value),\n    type: \"text\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"exampleInputEmail1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    type: \"email\",\n    className: \"form-control\",\n    \"aria-describedby\": \"emailHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    className: \"form-control\",\n    rows: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};","map":{"version":3,"sources":["/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/Contact.js"],"names":["React","useState","Contact","message","setMessage","name","setName","email","setEmail","handleSubmit","e","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","ok","console","log","json","response","status","alert","catch","err","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nexport const Contact = () => {\n  const [message, setMessage] = useState('')\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetch('http://localhost:9001/contact', {\n      method: \"POST\",\n      body: JSON.stringify({ name, email, message }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((res) => {\n        if (!res.ok) {\n          console.log('error')\n        } else {\n          return res.json()\n        }\n      })\n      .then((response) => {\n        if (response.status === 'success') {\n          alert(\"Tack för ditt meddelande. Jag kommer att svara så snart jag kan!\");\n        } else if (response.status === 'fail') {\n          alert(\"Det gick tyvärr inte att skicka meddelandet.\")\n        }\n      })\n      .then(() => {\n        setName('')\n        setEmail('')\n        setMessage('')\n      })\n      .catch((err) => console.log('errors', err))\n  }\n\n  return (\n    <form id=\"contact-form\" onSubmit={handleSubmit} method=\"POST\">\n      <div className=\"form-group\">\n        <label>Name</label>\n        <input value={name} onChange={(event) => setName(event.target.value)}\n          type=\"text\" className=\"form-control\" />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleInputEmail1\">Email address</label>\n        <input value={email} onChange={(event) => setEmail(event.target.value)}\n          type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"message\">Message</label>\n        <textarea value={message} onChange={(event) => setMessage(event.target.value)}\n          className=\"form-control\" rows=\"5\"></textarea>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}