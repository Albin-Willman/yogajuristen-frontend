{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var initialState={login:{accessToken:null,userId:0,userName:'',errorMessage:null,loginMessage:null,loggedoutMessage:null}};export var user=createSlice({name:'user',initialState:initialState,reducers:{setAccessToken:function setAccessToken(state,action){var accessToken=action.payload.accessToken;console.log(\"Access Token: \".concat(accessToken));state.login.accessToken=accessToken;},setUserId:function setUserId(state,action){var userId=action.payload.userId;console.log(\"User Id: \".concat(userId));state.login.userId=userId;},setUserName:function setUserName(state,action){var userName=action.payload.userName;console.log(\"username: \".concat(userName));state.login.userName=userName;},setErrorMessage:function setErrorMessage(state,action){var errorMessage=action.payload.errorMessage;console.log(\"Error Message: \".concat(errorMessage));state.login.errorMessage=errorMessage;},setLoginMessage:function setLoginMessage(state,action){var loginMessage=action.payload.loginMessage;console.log(\"Secret Message: \".concat(loginMessage));state.login.loginMessage=loginMessage;},setLoggedoutMessage:function setLoggedoutMessage(state,action){var loggedoutMessage=action.payload.loggedoutMessage;console.log(\"You are logged out: \".concat(loggedoutMessage));state.login.loggedoutMessage=loggedoutMessage;}}});export var login=function login(name,password){// const LOGIN_URL = 'http://localhost:9001/sessions';\nvar LOGIN_URL='https://yogajuristen.herokuapp.com/sessions';return function(dispatch){fetch(LOGIN_URL,{method:'POST',body:JSON.stringify({name:name,password:password}),headers:{'content-Type':'application/json'}}).then(function(res){if(res.ok){return res.json();}else{return res.text().then(function(json){throw new Error(json);});}}).then(function(json){dispatch(user.actions.setAccessToken({accessToken:json.accessToken}));dispatch(user.actions.setUserId({userId:json.userId}));dispatch(user.actions.setUserName({userName:name}));dispatch(user.actions.setErrorMessage({errorMessage:json.message}));}).catch(function(err){dispatch(user.actions.logout());dispatch(user.actions.setErrorMessage({errorMessage:err}));});};};export var getLoginMessage=function getLoginMessage(){// const USERS_URL = 'http://localhost:9001/users';\nvar USERS_URL='https://yogajuristen.herokuapp.com/users';return function(dispatch,getState){var accessToken=getState().user.login.accessToken;var userId=getState().user.login.userId;fetch(\"\".concat(USERS_URL,\"/\").concat(userId),{method:'GET',headers:{Authorization:accessToken}}).then(function(res){if(res.ok){return res.json();}throw'Please, try again.';}).then(function(json){dispatch(user.actions.setLoginMessage({loginMessage:JSON.stringify(json)}));}).catch(function(err){dispatch(user.actions.setErrorMessage({errorMessage:err}));});};};export var logout=function logout(){return function(dispatch){dispatch(user.actions.setLoginMessage({LogInMessage:null}));dispatch(user.actions.setErrorMessage({errorMessage:null}));dispatch(user.actions.setAccessToken({accessToken:null}));dispatch(user.actions.setUserId({userId:0}));dispatch(user.actions.setLoggedoutMessage({loggedoutMessage:true}));};};","map":{"version":3,"sources":["/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/reducers/user.js"],"names":["createSlice","initialState","login","accessToken","userId","userName","errorMessage","loginMessage","loggedoutMessage","user","name","reducers","setAccessToken","state","action","payload","console","log","setUserId","setUserName","setErrorMessage","setLoginMessage","setLoggedoutMessage","password","LOGIN_URL","dispatch","fetch","method","body","JSON","stringify","headers","then","res","ok","json","text","Error","actions","message","catch","err","logout","getLoginMessage","USERS_URL","getState","Authorization","LogInMessage"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  login: {\n    accessToken: null,\n    userId: 0,\n    userName: '',\n    errorMessage: null,\n    loginMessage: null,\n    loggedoutMessage: null,\n  },\n};\n\nexport const user = createSlice({\n  name: 'user',\n  initialState: initialState,\n  reducers: {\n    setAccessToken: (state, action) => {\n      const { accessToken } = action.payload;\n      console.log(`Access Token: ${accessToken}`);\n      state.login.accessToken = accessToken;\n    },\n    setUserId: (state, action) => {\n      const { userId } = action.payload;\n      console.log(`User Id: ${userId}`);\n      state.login.userId = userId;\n    },\n    setUserName: (state, action) => {\n      const { userName } = action.payload;\n      console.log(`username: ${userName}`);\n      state.login.userName = userName;\n    },\n    setErrorMessage: (state, action) => {\n      const { errorMessage } = action.payload;\n      console.log(`Error Message: ${errorMessage}`);\n      state.login.errorMessage = errorMessage;\n    },\n    setLoginMessage: (state, action) => {\n      const { loginMessage } = action.payload;\n      console.log(`Secret Message: ${loginMessage}`);\n      state.login.loginMessage = loginMessage;\n    },\n    setLoggedoutMessage: (state, action) => {\n      const { loggedoutMessage } = action.payload;\n      console.log(`You are logged out: ${loggedoutMessage}`);\n      state.login.loggedoutMessage = loggedoutMessage;\n    },\n  },\n});\n\nexport const login = (name, password) => {\n  // const LOGIN_URL = 'http://localhost:9001/sessions';\n  const LOGIN_URL = 'https://yogajuristen.herokuapp.com/sessions'\n\n  return (dispatch) => {\n    fetch(LOGIN_URL, {\n      method: 'POST',\n      body: JSON.stringify({ name, password }),\n      headers: { 'content-Type': 'application/json' },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.text().then((json) => { throw new Error(json) })\n        }\n      })\n      .then((json) => {\n        dispatch(\n          user.actions.setAccessToken({\n            accessToken: json.accessToken\n          })\n        );\n        dispatch(user.actions.setUserId({ userId: json.userId }));\n        dispatch(\n          user.actions.setUserName({\n            userName: name\n          })\n        );\n        dispatch(user.actions.setErrorMessage({ errorMessage: json.message }))\n      })\n      .catch((err) => {\n        dispatch(user.actions.logout());\n        dispatch(user.actions.setErrorMessage({ errorMessage: err }));\n      });\n  };\n};\n\nexport const getLoginMessage = () => {\n  // const USERS_URL = 'http://localhost:9001/users';\n\n  const USERS_URL = 'https://yogajuristen.herokuapp.com/users'\n\n  return (dispatch, getState) => {\n    const accessToken = getState().user.login.accessToken;\n    const userId = getState().user.login.userId;\n    fetch(`${USERS_URL}/${userId}`, {\n      method: 'GET',\n\n      headers: { Authorization: accessToken },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw 'Please, try again.';\n      })\n      .then((json) => {\n        dispatch(\n          user.actions.setLoginMessage({ loginMessage: JSON.stringify(json) })\n        );\n      })\n      .catch((err) => {\n        dispatch(user.actions.setErrorMessage({ errorMessage: err }));\n      });\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    dispatch(user.actions.setLoginMessage({ LogInMessage: null }));\n    dispatch(user.actions.setErrorMessage({ errorMessage: null }));\n    dispatch(user.actions.setAccessToken({ accessToken: null }));\n    dispatch(user.actions.setUserId({ userId: 0 }));\n    dispatch(user.actions.setLoggedoutMessage({ loggedoutMessage: true }));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}