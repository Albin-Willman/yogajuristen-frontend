{"ast":null,"code":"var _jsxFileName = \"/Users/josephine/Desktop/myproject/yogajuristen-frontend/code/src/components/Calendar/Day.js\";\nimport React, { memo } from 'react';\nimport styled from 'styled-components';\nimport flow from 'lodash/fp/flow';\nimport filter from 'lodash/fp/filter';\nimport sortBy from 'lodash/fp/sortBy';\nimport last from 'lodash/fp/last';\nimport { memoize } from 'lodash';\nimport eventsData from './events';\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  width: 100%;\n  height: 100%;\n`;\nconst Number = styled.div`\n  position: absolute;\n  top: 8px;\n  left: 4px;\n`;\nconst Event = styled.div`\n  position: relative;\n  z-index: 2;\n  height: 16px;\n  color: #333;\n  background: #fec077;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-left: 2px;\n  margin-right: 2px;\n\n  padding-left: 4px;\n\n  font-size: 12px;\n  text-align: left;\n  line-height: 16px;\n\n  ${({\n  green\n}) => green && `\n    color: white;\n    background: #0c6776;\n  `}\n`;\nconst getEventForDay = memoize(day => flow(filter(({\n  start,\n  end\n}) => day.isBetween(start, end, 'day', '[]')), sortBy('start'), last)(eventsData));\n\nconst renderEventForDay = day => {\n  const event = getEventForDay(day);\n  if (!event) return null;\n  const {\n    start,\n    end,\n    label,\n    color,\n    type\n  } = event;\n  return /*#__PURE__*/React.createElement(Event, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, label);\n};\n\nexport const Day = memoize(day => {\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Number, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, day.format('D')), renderEventForDay(day));\n});","map":{"version":3,"sources":["/Users/josephine/Desktop/myproject/yogajuristen-frontend/code/src/components/Calendar/Day.js"],"names":["React","memo","styled","flow","filter","sortBy","last","memoize","eventsData","Wrapper","div","Number","Event","green","getEventForDay","day","start","end","isBetween","renderEventForDay","event","label","color","type","Day","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAOC,UAAP,MAAuB,UAAvB;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAI;;;;;;;CAA3B;AASA,MAAMC,MAAM,GAAGT,MAAM,CAACQ,GAAI;;;;CAA1B;AAMA,MAAME,KAAK,GAAGV,MAAM,CAACQ,GAAI;;;;;;;;;;;;;;;;;IAiBrB,CAAC;AAAEG,EAAAA;AAAF,CAAD,KACAA,KAAK,IACJ;;;GAGD;CAtBJ;AAwBA,MAAMC,cAAc,GAAGP,OAAO,CAACQ,GAAG,IAChCZ,IAAI,CACFC,MAAM,CAAC,CAAC;AAAEY,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAoBF,GAAG,CAACG,SAAJ,CAAcF,KAAd,EAAqBC,GAArB,EAA0B,KAA1B,EAAiC,IAAjC,CAArB,CADJ,EAEFZ,MAAM,CAAC,OAAD,CAFJ,EAGFC,IAHE,CAAJ,CAIEE,UAJF,CAD4B,CAA9B;;AAQA,MAAMW,iBAAiB,GAAGJ,GAAG,IAAI;AAC/B,QAAMK,KAAK,GAAGN,cAAc,CAACC,GAAD,CAA5B;AACA,MAAI,CAACK,KAAL,EAAY,OAAO,IAAP;AACZ,QAAM;AAAEJ,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcI,IAAAA,KAAd;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAAqCH,KAA3C;AACA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,KAAR,CADF;AAID,CARD;;AAUA,OAAO,MAAMG,GAAG,GAAGjB,OAAO,CAACQ,GAAG,IAAI;AAChC,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,GAAG,CAACU,MAAJ,CAAW,GAAX,CAAT,CADF,EAEGN,iBAAiB,CAACJ,GAAD,CAFpB,CADF;AAMD,CAPyB,CAAnB","sourcesContent":["import React, { memo } from 'react'\nimport styled from 'styled-components'\nimport flow from 'lodash/fp/flow'\nimport filter from 'lodash/fp/filter'\nimport sortBy from 'lodash/fp/sortBy'\nimport last from 'lodash/fp/last'\nimport { memoize } from 'lodash'\n\nimport eventsData from './events'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  width: 100%;\n  height: 100%;\n`\n\nconst Number = styled.div`\n  position: absolute;\n  top: 8px;\n  left: 4px;\n`\n\nconst Event = styled.div`\n  position: relative;\n  z-index: 2;\n  height: 16px;\n  color: #333;\n  background: #fec077;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-left: 2px;\n  margin-right: 2px;\n\n  padding-left: 4px;\n\n  font-size: 12px;\n  text-align: left;\n  line-height: 16px;\n\n  ${({ green }) =>\n    green &&\n    `\n    color: white;\n    background: #0c6776;\n  `}\n`\nconst getEventForDay = memoize(day =>\n  flow(\n    filter(({ start, end }) => day.isBetween(start, end, 'day', '[]')),\n    sortBy('start'),\n    last\n  )(eventsData)\n)\n\nconst renderEventForDay = day => {\n  const event = getEventForDay(day)\n  if (!event) return null\n  const { start, end, label, color, type } = event\n  return (\n    <Event>{label}</Event>\n\n  )\n}\n\nexport const Day = memoize(day => {\n  return (\n    <Wrapper>\n      <Number>{day.format('D')}</Number>\n      {renderEventForDay(day)}\n    </Wrapper>\n  )\n})\n\n"]},"metadata":{},"sourceType":"module"}