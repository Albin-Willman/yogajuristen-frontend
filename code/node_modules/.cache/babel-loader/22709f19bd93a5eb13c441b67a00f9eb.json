{"ast":null,"code":"var _jsxFileName = \"/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/ReviewInput.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { user } from 'reducers/user';\nexport const ReviewInput = ({\n  setReviews\n}) => {\n  const [userReview, setUserReview] = useState('');\n  const [reviewUser, setReviewUser] = useState('');\n  const accessToken = useSelector(store => store.user.login.accessToken);\n  const dispatch = useDispatch();\n\n  const handleReviewSubmit = event => {\n    event.preventDefault();\n    fetch('http://localhost:9001/reviews', {\n      method: 'POST',\n      headers: {\n        Authorization: accessToken,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: userReview\n      })\n    }).then(res => res.json()).then(newReview => {\n      setReviews(previousReviews => [newReview, ...previousReviews]);\n      setUserReview(''); // will empty the textarea when the form is submitted\n\n      dispatch(user.actions.setReviewer({\n        reviewer: user.login.userName\n      }));\n    });\n  };\n\n  if (!accessToken) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    }, \"Log in to leave a review\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleReviewSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"leave a review\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: event => setUserReview(event.target.value),\n      value: userReview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      // disabled={\n      //   userReview.length < 6 || userReview.length > 140 ? true : false\n      // }\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"SUBMIT\"))));\n  }\n};","map":{"version":3,"sources":["/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/ReviewInput.js"],"names":["React","useState","useEffect","useDispatch","useSelector","user","ReviewInput","setReviews","userReview","setUserReview","reviewUser","setReviewUser","accessToken","store","login","dispatch","handleReviewSubmit","event","preventDefault","fetch","method","headers","Authorization","body","JSON","stringify","message","then","res","json","newReview","previousReviews","actions","setReviewer","reviewer","userName","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,eAArB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAC7C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMW,WAAW,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACR,IAAN,CAAWS,KAAX,CAAiBF,WAA7B,CAA/B;AACA,QAAMG,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,kBAAkB,GAAIC,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEV,WADR;AAEP,wBAAgB;AAFT,OAF4B;AAOrCW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,OAAO,EAAElB;AAAX,OAAf;AAP+B,KAAlC,CAAL,CASGmB,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAUSG,SAAD,IAAe;AACnBvB,MAAAA,UAAU,CAAEwB,eAAD,IAAqB,CAACD,SAAD,EAAY,GAAGC,eAAf,CAAtB,CAAV;AACAtB,MAAAA,aAAa,CAAC,EAAD,CAAb,CAFmB,CAEA;;AACnBM,MAAAA,QAAQ,CAACV,IAAI,CAAC2B,OAAL,CAAaC,WAAb,CAAyB;AAAEC,QAAAA,QAAQ,EAAE7B,IAAI,CAACS,KAAL,CAAWqB;AAAvB,OAAzB,CAAD,CAAR;AACD,KAdH;AAeD,GAlBD;;AAmBA,MAAI,CAACvB,WAAL,EAAkB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAM,MAAA,QAAQ,EAAEI,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,MAAA,QAAQ,EAAGC,KAAD,IAAWR,aAAa,CAACQ,KAAK,CAACmB,MAAN,CAAaC,KAAd,CADpC;AAEE,MAAA,KAAK,EAAE7B,UAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAOE;AACE;AACA;AACA;AACA,MAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADF,CADF;AAsBD;AACF,CAnDM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { user } from 'reducers/user';\n\nexport const ReviewInput = ({ setReviews }) => {\n  const [userReview, setUserReview] = useState('');\n  const [reviewUser, setReviewUser] = useState('');\n  const accessToken = useSelector((store) => store.user.login.accessToken);\n  const dispatch = useDispatch();\n\n  const handleReviewSubmit = (event) => {\n    event.preventDefault();\n\n    fetch('http://localhost:9001/reviews', {\n      method: 'POST',\n      headers: {\n        Authorization: accessToken,\n        'Content-Type': 'application/json',\n      },\n\n      body: JSON.stringify({ message: userReview })\n    })\n      .then((res) => res.json())\n      .then((newReview) => {\n        setReviews((previousReviews) => [newReview, ...previousReviews]);\n        setUserReview(''); // will empty the textarea when the form is submitted\n        dispatch(user.actions.setReviewer({ reviewer: user.login.userName }))\n      });\n  };\n  if (!accessToken) {\n    return <p>Log in to leave a review</p>\n  } else {\n    return (\n      <form onSubmit={handleReviewSubmit}>\n        <div>\n          <label>\n            <p>leave a review</p>\n            <textarea\n              onChange={(event) => setUserReview(event.target.value)}\n              value={userReview}\n            />\n\n            <button\n              // disabled={\n              //   userReview.length < 6 || userReview.length > 140 ? true : false\n              // }\n              type='submit'\n            >\n              SUBMIT\n          </button>\n          </label>\n        </div>\n      </form>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}