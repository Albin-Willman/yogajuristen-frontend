{"ast":null,"code":"var _jsxFileName = \"/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/ReviewInput.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport warrior from '../images/warrior.jpg';\nimport { useSelector } from 'react-redux';\nconst Input = styled.div`\ndisplay: flex; \njustify-content: center; \ncolor: #5e5e5e; \nfont-family: 'Barlow', sans-serif;\nbackground-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.3)), url(${warrior});\nbackground-size: cover;\nmargin-bottom: 40px; \n`;\nconst Form = styled.label`\nmargin: 30px; \ndisplay: flex; \nflex-direction: column; \nwidth: 50%; \n`;\nconst Text = styled.h2`\nmargin: 20px; \n\n\n\n\n`;\nconst Textarea = styled.textarea`\nheight: 100px; \nborder-radius: 10px;\n@media(min-width:668px) and (max-width:1024px){\n  height: 150px; \n}\n@media(min-width: 1024px){\n  height: 175px; \n}\n`;\nconst LogInText = styled.h2`\n\n\n\n`;\nconst StyledLink = styled(Link)`\ncolor: white;\nfont-style: italic; \nfont-size: 1.4rem;\ntext-decoration: none;\n&:focus, &:hover, &:visited, &:link, &:active {\n  text-decoration: none;\n  color: darkgrey; \n  `;\nconst ButtonContainer = styled.div`\ndisplay: flex;\njustify-content: flex-end;\npadding-right: 14px;\nmargin: 20px 0; \n`;\nconst Button = styled.button`\nwidth: 40px;\nheight: 40px;\nborder: solid 2px white;\nborder-radius: 50%;\ncolor: white;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nfont-size: 2rem;\n\nbackground: none;\n@media(min - width: 1024px) {\n  width: 50px;\n  height: 50px;\n}\n`;\nexport const ReviewInput = ({\n  setReviews\n}) => {\n  const [userReview, setUserReview] = useState('');\n  const accessToken = useSelector(store => store.user.login.accessToken);\n  const userName = useSelector(store => store.user.login.userName);\n\n  const handleReviewSubmit = event => {\n    event.preventDefault();\n    fetch('http://localhost:9001/reviews', {\n      method: 'POST',\n      headers: {\n        Authorization: accessToken,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: userReview,\n        reviewer: userName\n      })\n    }).then(res => res.json()).then(newReview => {\n      setReviews(previousReviews => [newReview, ...previousReviews]);\n      setUserReview(''); // will empty the textarea when the form is submitted\n    });\n  }; // if (accessToken) {\n  //   return <Input><p>Log in to leave a review</p></Input>\n  // } else {\n\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleReviewSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"L\\xE4mna g\\xE4rna en h\\xE4lsning eller en recension! \"), /*#__PURE__*/React.createElement(Textarea, {\n    onChange: event => setUserReview(event.target.value),\n    value: userReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \" \", accessToken ? /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 45\n    }\n  }, \"+ \") : /*#__PURE__*/React.createElement(LogInText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(StyledLink, {\n    to: \"/Members\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 27\n    }\n  }, \"Logga in f\\xF6rst.\"))))));\n}; // };","map":{"version":3,"sources":["/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/ReviewInput.js"],"names":["React","useState","useEffect","styled","Link","warrior","useSelector","Input","div","Form","label","Text","h2","Textarea","textarea","LogInText","StyledLink","ButtonContainer","Button","button","ReviewInput","setReviews","userReview","setUserReview","accessToken","store","user","login","userName","handleReviewSubmit","event","preventDefault","fetch","method","headers","Authorization","body","JSON","stringify","message","reviewer","then","res","json","newReview","previousReviews","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport warrior from '../images/warrior.jpg';\nimport { useSelector } from 'react-redux';\n\n\nconst Input = styled.div`\ndisplay: flex; \njustify-content: center; \ncolor: #5e5e5e; \nfont-family: 'Barlow', sans-serif;\nbackground-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.3)), url(${warrior});\nbackground-size: cover;\nmargin-bottom: 40px; \n`\n\n\nconst Form = styled.label`\nmargin: 30px; \ndisplay: flex; \nflex-direction: column; \nwidth: 50%; \n`\nconst Text = styled.h2`\nmargin: 20px; \n\n\n\n\n`\n\nconst Textarea = styled.textarea`\nheight: 100px; \nborder-radius: 10px;\n@media(min-width:668px) and (max-width:1024px){\n  height: 150px; \n}\n@media(min-width: 1024px){\n  height: 175px; \n}\n`\n\nconst LogInText = styled.h2`\n\n\n\n`\nconst StyledLink = styled(Link)`\ncolor: white;\nfont-style: italic; \nfont-size: 1.4rem;\ntext-decoration: none;\n&:focus, &:hover, &:visited, &:link, &:active {\n  text-decoration: none;\n  color: darkgrey; \n  `\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\njustify-content: flex-end;\npadding-right: 14px;\nmargin: 20px 0; \n`\n\nconst Button = styled.button`\nwidth: 40px;\nheight: 40px;\nborder: solid 2px white;\nborder-radius: 50%;\ncolor: white;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nfont-size: 2rem;\n\nbackground: none;\n@media(min - width: 1024px) {\n  width: 50px;\n  height: 50px;\n}\n`\n\nexport const ReviewInput = ({ setReviews }) => {\n  const [userReview, setUserReview] = useState('');\n  const accessToken = useSelector((store) => store.user.login.accessToken);\n  const userName = useSelector((store) => store.user.login.userName);\n\n  const handleReviewSubmit = (event) => {\n    event.preventDefault();\n\n    fetch('http://localhost:9001/reviews', {\n      method: 'POST',\n      headers: {\n        Authorization: accessToken,\n        'Content-Type': 'application/json',\n      },\n\n      body: JSON.stringify({ message: userReview, reviewer: userName })\n    })\n      .then((res) => res.json())\n      .then((newReview) => {\n        setReviews((previousReviews) => [newReview, ...previousReviews]);\n        setUserReview(''); // will empty the textarea when the form is submitted\n      });\n  };\n  // if (accessToken) {\n  //   return <Input><p>Log in to leave a review</p></Input>\n  // } else {\n  return (\n    <form onSubmit={handleReviewSubmit}>\n      <Input>\n        <Form>\n          <Text>Lämna gärna en hälsning eller en recension! </Text>\n          <Textarea\n            onChange={(event) => setUserReview(event.target.value)}\n            value={userReview}\n          />\n          <ButtonContainer> {accessToken ? (<Button\n            type='submit'\n          >\n            + </Button>\n          ) : (<LogInText><StyledLink to=\"/Members\">Logga in först.</StyledLink></LogInText>)}\n          </ButtonContainer>\n\n\n        </Form>\n      </Input>\n    </form>\n  );\n}\n// };\n"]},"metadata":{},"sourceType":"module"}