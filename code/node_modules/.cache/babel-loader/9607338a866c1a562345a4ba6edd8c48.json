{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  login: {\n    accessToken: null,\n    userId: 0,\n    userName: '',\n    errorMessage: null,\n    loggedoutMessage: null\n  }\n};\nexport const user = createSlice({\n  name: 'user',\n  initialState: initialState,\n  reducers: {\n    setAccessToken: (state, action) => {\n      const {\n        accessToken\n      } = action.payload;\n      console.log(`Access Token: ${accessToken}`);\n      state.login.accessToken = accessToken;\n    },\n    setUserId: (state, action) => {\n      const {\n        userId\n      } = action.payload;\n      console.log(`User Id: ${userId}`);\n      state.login.userId = userId;\n    },\n    setUserName: (state, action) => {\n      const {\n        userName\n      } = action.payload;\n      console.log(`username: ${userName}`);\n      state.login.userName = userName;\n    },\n    setErrorMessage: (state, action) => {\n      const {\n        errorMessage\n      } = action.payload;\n      console.log(`Error Message: ${errorMessage}`);\n      state.login.errorMessage = errorMessage;\n    },\n    setLoggedoutMessage: (state, action) => {\n      const {\n        loggedoutMessage\n      } = action.payload;\n      console.log(`You are logged out: ${loggedoutMessage}`);\n      state.login.loggedoutMessage = loggedoutMessage;\n    }\n  }\n});\nexport const login = (name, password) => {\n  const LOGIN_URL = 'https://yogajuristen.herokuapp.com/sessions';\n  return dispatch => {\n    fetch(LOGIN_URL, {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        password\n      }),\n      headers: {\n        'content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.text().then(json => {\n          throw new Error(json);\n        });\n      }\n    }).then(json => {\n      dispatch(user.actions.setAccessToken({\n        accessToken: json.accessToken\n      }));\n      dispatch(user.actions.setUserId({\n        userId: json.userId\n      }));\n      dispatch(user.actions.setUserName({\n        userName: name\n      }));\n      dispatch(user.actions.setErrorMessage({\n        errorMessage: json.message\n      }));\n    }).catch(err => {\n      dispatch(user.actions.logout());\n      dispatch(user.actions.setErrorMessage({\n        errorMessage: err\n      }));\n    });\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    dispatch(user.actions.setErrorMessage({\n      errorMessage: null\n    }));\n    dispatch(user.actions.setAccessToken({\n      accessToken: null\n    }));\n    dispatch(user.actions.setUserId({\n      userId: 0\n    }));\n    dispatch(user.actions.setUserName({\n      userName: ''\n    }));\n    dispatch(user.actions.setLoggedoutMessage({\n      loggedoutMessage: true\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/josephine/Desktop/myproject/yogajuristen-frontend/code/src/reducers/user.js"],"names":["createSlice","initialState","login","accessToken","userId","userName","errorMessage","loggedoutMessage","user","name","reducers","setAccessToken","state","action","payload","console","log","setUserId","setUserName","setErrorMessage","setLoggedoutMessage","password","LOGIN_URL","dispatch","fetch","method","body","JSON","stringify","headers","then","res","ok","json","text","Error","actions","message","catch","err","logout"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  login: {\n    accessToken: null,\n    userId: 0,\n    userName: '',\n    errorMessage: null,\n    loggedoutMessage: null,\n  },\n};\n\nexport const user = createSlice({\n  name: 'user',\n  initialState: initialState,\n  reducers: {\n    setAccessToken: (state, action) => {\n      const { accessToken } = action.payload;\n      console.log(`Access Token: ${accessToken}`);\n      state.login.accessToken = accessToken;\n    },\n    setUserId: (state, action) => {\n      const { userId } = action.payload;\n      console.log(`User Id: ${userId}`);\n      state.login.userId = userId;\n    },\n    setUserName: (state, action) => {\n      const { userName } = action.payload;\n      console.log(`username: ${userName}`);\n      state.login.userName = userName;\n    },\n    setErrorMessage: (state, action) => {\n      const { errorMessage } = action.payload;\n      console.log(`Error Message: ${errorMessage}`);\n      state.login.errorMessage = errorMessage;\n    },\n    setLoggedoutMessage: (state, action) => {\n      const { loggedoutMessage } = action.payload;\n      console.log(`You are logged out: ${loggedoutMessage}`);\n      state.login.loggedoutMessage = loggedoutMessage;\n    },\n  },\n});\n\nexport const login = (name, password) => {\n  const LOGIN_URL = 'https://yogajuristen.herokuapp.com/sessions'\n  return (dispatch) => {\n    fetch(LOGIN_URL, {\n      method: 'POST',\n      body: JSON.stringify({ name, password }),\n      headers: { 'content-Type': 'application/json' },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.text().then((json) => { throw new Error(json) })\n        }\n      })\n      .then((json) => {\n        dispatch(\n          user.actions.setAccessToken({\n            accessToken: json.accessToken\n          })\n        );\n        dispatch(user.actions.setUserId({ userId: json.userId }));\n        dispatch(\n          user.actions.setUserName({\n            userName: name\n          })\n        );\n        dispatch(user.actions.setErrorMessage({ errorMessage: json.message }))\n      })\n      .catch((err) => {\n        dispatch(user.actions.logout());\n        dispatch(user.actions.setErrorMessage({ errorMessage: err }));\n      });\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    dispatch(user.actions.setErrorMessage({ errorMessage: null }));\n    dispatch(user.actions.setAccessToken({ accessToken: null }));\n    dispatch(user.actions.setUserId({ userId: 0 }));\n    dispatch(user.actions.setUserName({ userName: '' }));\n    dispatch(user.actions.setLoggedoutMessage({ loggedoutMessage: true }));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}