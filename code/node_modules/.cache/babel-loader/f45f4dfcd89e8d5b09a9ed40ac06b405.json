{"ast":null,"code":"var _jsxFileName = \"/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/Calendar/EventCalendar.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { DayPickerRangeController } from 'react-dates';\nimport { START_DATE, END_DATE } from 'react-dates/constants';\nimport Day from './Day';\nimport eventsData from './events';\nimport moment from 'moment';\nconst Wrapper = styled.div`\n  .CalendarDay__highlighted_calendar {\n    background: #f7f8f6 !important;\n  }\n\n  .CalendarDay__selected,\n  .CalendarDay__selected:hover {\n    border: 2px double #0c6776;\n    color: inherit;\n    background: none;\n  }\n\n  .CalendarDay__selected_span {\n    border: 2px double #0c6776;\n    color: inherit;\n    background: none;\n  }\n`;\n\nconst isDayHighlighted = day => {\n  let isBlocked = false;\n  eventsData.forEach(({\n    start,\n    end\n  }) => {\n    if (day.isBetween(start, end, 'day', '[]')) {\n      isBlocked = true;\n    }\n  });\n  return isBlocked;\n};\n\nconst EventCalendar = () => {\n  const [focusedInput, setFocusedInput] = useState(START_DATE);\n  const [{\n    startDate,\n    endDate\n  }, setDates] = useState({\n    startDate: null,\n    endDate: null\n  });\n\n  const handleFocusChange = focusedInput => {\n    setFocusedInput(focusedInput ? END_DATE : START_DATE);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DayPickerRangeController, {\n    focusedInput: focusedInput,\n    onFocusChange: handleFocusChange,\n    startDate: startDate,\n    endDate: endDate,\n    onDatesChange: setDates,\n    daySize: 100,\n    hideKeyboardShortcutsPanel: true,\n    renderDayContents: Day,\n    isDayHighlighted: isDayHighlighted,\n    enableOutsideDays: true,\n    firstDayOfWeek: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default EventCalendar;","map":{"version":3,"sources":["/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/Calendar/EventCalendar.js"],"names":["React","useState","styled","DayPickerRangeController","START_DATE","END_DATE","Day","eventsData","moment","Wrapper","div","isDayHighlighted","day","isBlocked","forEach","start","end","isBetween","EventCalendar","focusedInput","setFocusedInput","startDate","endDate","setDates","handleFocusChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,wBAAT,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,uBAArC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAI;;;;;;;;;;;;;;;;;CAA3B;;AAmBA,MAAMC,gBAAgB,GAAGC,GAAG,IAAI;AAC9B,MAAIC,SAAS,GAAG,KAAhB;AACAN,EAAAA,UAAU,CAACO,OAAX,CAAmB,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAoB;AACrC,QAAIJ,GAAG,CAACK,SAAJ,CAAcF,KAAd,EAAqBC,GAArB,EAA0B,KAA1B,EAAiC,IAAjC,CAAJ,EAA4C;AAC1CH,MAAAA,SAAS,GAAG,IAAZ;AACD;AACF,GAJD;AAKA,SAAOA,SAAP;AACD,CARD;;AAUA,MAAMK,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAACG,UAAD,CAAhD;AACA,QAAM,CAAC;AAAEiB,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAD,EAAyBC,QAAzB,IAAqCtB,QAAQ,CAAC;AAClDoB,IAAAA,SAAS,EAAE,IADuC;AAElDC,IAAAA,OAAO,EAAE;AAFyC,GAAD,CAAnD;;AAKA,QAAME,iBAAiB,GAAGL,YAAY,IAAI;AACxCC,IAAAA,eAAe,CAACD,YAAY,GAAGd,QAAH,GAAcD,UAA3B,CAAf;AACD,GAFD;;AAIA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,wBAAD;AACE,IAAA,YAAY,EAAEe,YADhB;AAEE,IAAA,aAAa,EAAEK,iBAFjB;AAGE,IAAA,SAAS,EAAEH,SAHb;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,aAAa,EAAEC,QALjB;AAME,IAAA,OAAO,EAAE,GANX;AAOE,IAAA,0BAA0B,MAP5B;AAQE,IAAA,iBAAiB,EAAEjB,GARrB;AASE,IAAA,gBAAgB,EAAEK,gBATpB;AAUE,IAAA,iBAAiB,MAVnB;AAWE,IAAA,cAAc,EAAE,CAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAiBD,CA5BD;;AA8BA,eAAeO,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { DayPickerRangeController } from 'react-dates'\nimport { START_DATE, END_DATE } from 'react-dates/constants'\nimport Day from './Day'\nimport eventsData from './events'\nimport moment from 'moment'\n\nconst Wrapper = styled.div`\n  .CalendarDay__highlighted_calendar {\n    background: #f7f8f6 !important;\n  }\n\n  .CalendarDay__selected,\n  .CalendarDay__selected:hover {\n    border: 2px double #0c6776;\n    color: inherit;\n    background: none;\n  }\n\n  .CalendarDay__selected_span {\n    border: 2px double #0c6776;\n    color: inherit;\n    background: none;\n  }\n`\n\nconst isDayHighlighted = day => {\n  let isBlocked = false\n  eventsData.forEach(({ start, end }) => {\n    if (day.isBetween(start, end, 'day', '[]')) {\n      isBlocked = true\n    }\n  })\n  return isBlocked\n}\n\nconst EventCalendar = () => {\n  const [focusedInput, setFocusedInput] = useState(START_DATE)\n  const [{ startDate, endDate }, setDates] = useState({\n    startDate: null,\n    endDate: null,\n  })\n\n  const handleFocusChange = focusedInput => {\n    setFocusedInput(focusedInput ? END_DATE : START_DATE)\n  }\n\n  return (\n    <Wrapper>\n      <DayPickerRangeController\n        focusedInput={focusedInput}\n        onFocusChange={handleFocusChange}\n        startDate={startDate}\n        endDate={endDate}\n        onDatesChange={setDates}\n        daySize={100}\n        hideKeyboardShortcutsPanel\n        renderDayContents={Day}\n        isDayHighlighted={isDayHighlighted}\n        enableOutsideDays\n        firstDayOfWeek={1}\n      />\n    </Wrapper>\n  )\n}\n\nexport default EventCalendar"]},"metadata":{},"sourceType":"module"}