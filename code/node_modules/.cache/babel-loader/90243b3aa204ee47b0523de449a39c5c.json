{"ast":null,"code":"var _jsxFileName = \"/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/Calendar/EventCalendar.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { DayPickerSingleDateController } from 'react-dates';\nimport { START_DATE } from 'react-dates/constants';\nimport { Day } from './Day';\nimport eventsData from './events';\nconst Wrapper = styled.div`\n\n  .CalendarDay__highlighted_calendar {\n    background: #f7f8f6 !important;\n  }\n`;\n\nconst isDayHighlighted = day => {\n  let isBlocked = false;\n  eventsData.forEach(({\n    start,\n    end\n  }) => {\n    if (day.isBetween(start, end, 'day', '[]')) {\n      isBlocked = true;\n    }\n  });\n  return isBlocked;\n};\n\nexport const EventCalendar = () => {\n  const [focusedInput, setFocusedInput] = useState(START_DATE);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DayPickerSingleDateController, {\n    onFocusChange: handleFocusChange,\n    startDate: startDate,\n    endDate: endDate,\n    onDatesChange: setDates,\n    hideKeyboardShortcutsPanel: true,\n    focusedInput: focusedInput,\n    daySize: 100,\n    renderDayContents: Day,\n    isDayHighlighted: isDayHighlighted,\n    enableOutsideDays: true,\n    firstDayOfWeek: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\nexport default EventCalendar;","map":{"version":3,"sources":["/Users/josephine/Desktop/myproject/yogajuristen-frontend/src/components/Calendar/EventCalendar.js"],"names":["React","useState","styled","DayPickerSingleDateController","START_DATE","Day","eventsData","Wrapper","div","isDayHighlighted","day","isBlocked","forEach","start","end","isBetween","EventCalendar","focusedInput","setFocusedInput","handleFocusChange","startDate","endDate","setDates"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,6BAAT,QAA8C,aAA9C;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AAGA,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAI;;;;;CAA3B;;AAMA,MAAMC,gBAAgB,GAAGC,GAAG,IAAI;AAC9B,MAAIC,SAAS,GAAG,KAAhB;AACAL,EAAAA,UAAU,CAACM,OAAX,CAAmB,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAoB;AACrC,QAAIJ,GAAG,CAACK,SAAJ,CAAcF,KAAd,EAAqBC,GAArB,EAA0B,KAA1B,EAAiC,IAAjC,CAAJ,EAA4C;AAC1CH,MAAAA,SAAS,GAAG,IAAZ;AACD;AACF,GAJD;AAKA,SAAOA,SAAP;AACD,CARD;;AAUA,OAAO,MAAMK,aAAa,GAAG,MAAM;AACjC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAACG,UAAD,CAAhD;AACA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,6BAAD;AACE,IAAA,aAAa,EAAEe,iBADjB;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,aAAa,EAAEC,QAJjB;AAKE,IAAA,0BAA0B,MAL5B;AAME,IAAA,YAAY,EAAEL,YANhB;AAOE,IAAA,OAAO,EAAE,GAPX;AAQE,IAAA,iBAAiB,EAAEZ,GARrB;AASE,IAAA,gBAAgB,EAAEI,gBATpB;AAUE,IAAA,iBAAiB,MAVnB;AAWE,IAAA,cAAc,EAAE,CAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAiBD,CAnBM;AAqBP,eAAeO,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { DayPickerSingleDateController } from 'react-dates'\nimport { START_DATE } from 'react-dates/constants'\nimport { Day } from './Day'\nimport eventsData from './events'\n\n\nconst Wrapper = styled.div`\n\n  .CalendarDay__highlighted_calendar {\n    background: #f7f8f6 !important;\n  }\n`\nconst isDayHighlighted = day => {\n  let isBlocked = false\n  eventsData.forEach(({ start, end }) => {\n    if (day.isBetween(start, end, 'day', '[]')) {\n      isBlocked = true\n    }\n  })\n  return isBlocked\n}\n\nexport const EventCalendar = () => {\n  const [focusedInput, setFocusedInput] = useState(START_DATE)\n  return (\n    <Wrapper>\n      <DayPickerSingleDateController\n        onFocusChange={handleFocusChange}\n        startDate={startDate}\n        endDate={endDate}\n        onDatesChange={setDates}\n        hideKeyboardShortcutsPanel\n        focusedInput={focusedInput}\n        daySize={100}\n        renderDayContents={Day}\n        isDayHighlighted={isDayHighlighted}\n        enableOutsideDays\n        firstDayOfWeek={1}\n      />\n    </Wrapper>\n  )\n}\n\nexport default EventCalendar"]},"metadata":{},"sourceType":"module"}